model User {
    id               String             @id
    name             String
    email            String
    emailVerified    Boolean
    image            String?
    createdAt        DateTime
    updatedAt        DateTime
    sessions         Session[]
    accounts         Account[]
    UserProfile      UserProfile[]
    BoardFactionRole BoardFactionRole[]
    CommitteeMember  CommitteeMember[]
    File             File[]

    @@unique([email])
    @@map("user")
}

model Session {
    id        String   @id
    expiresAt DateTime
    token     String
    createdAt DateTime
    updatedAt DateTime
    ipAddress String?
    userAgent String?
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([token])
    @@map("session")
}

model Account {
    id                    String    @id
    accountId             String
    providerId            String
    userId                String
    user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    accessToken           String?
    refreshToken          String?
    idToken               String?
    accessTokenExpiresAt  DateTime?
    refreshTokenExpiresAt DateTime?
    scope                 String?
    password              String?
    createdAt             DateTime
    updatedAt             DateTime

    @@map("account")
}

model Verification {
    id         String    @id
    identifier String
    value      String
    expiresAt  DateTime
    createdAt  DateTime?
    updatedAt  DateTime?

    @@map("verification")
}

model UserProfile {
    id          String    @id
    userId      String    @unique
    user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    initials    String?
    firstName   String
    middleName  String?
    lastName    String
    dateOfBirth DateTime?
    phoneNumber String?
    street      String?
    city        String?
    postalCode  String?
    country     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("user_profile")
}
